@using GameGroove.Models
@model ChangePassword

@{
    ViewBag.Title = "Change Password";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Change Password</h2>

@*form to change password*@
@using (Html.BeginForm("ChangePassword", "Account", FormMethod.Post))
{
<div class="form-horizontal">

    @*pass the user id in a hiddenfor*@
    @Html.HiddenFor(model => Model.UserID)

    <strong>Current Password</strong>

    @*check permission*@
    @if (Session["UserID"] != null && (int)Session["UserID"] == Model.UserID)
    {
    <div class="form-group">

        @*form group for password*@
        @Html.PasswordFor(model => Model.Password, new { @id = "passwordInput", @class = "form-control" })

        @*check box to show password*@
        <div class="row">
            <div class="col-md-1">
                <input type="checkbox" onclick="hidePassword()">
            </div>
            <div class="col-md-2">
                Show Password
            </div>
        </div>
        @Html.ValidationMessageFor(model => Model.Password, $"{ TempData["IncorrectPassword"] }", new { @class = "text-danger" })
    </div>
    }
    @*check for admin*@
    else if (Session["RoleID"] != null && (int)Session["RoleID"] == 6)
    {
    <div class="form-group">

        @*form group for password that fills in the password for admins*@
        @Html.TextBoxFor(model => Model.Password, new { @id = "passwordInput", @type = "password", @class = "form-control" })

        @*check box to show password*@
        <div class="row">
            <div class="col-md-1">
                <input type="checkbox" onclick="hidePassword()">
            </div>
            <div class="col-md-2">
                Show Password
            </div>
        </div>
        @Html.ValidationMessageFor(model => Model.Password, "", new { @class = "text-danger" })
    </div>
    }

    @*form group for new password*@
    @Html.LabelFor(model => Model.NewPassword)
    <div class="form-group">
        @Html.PasswordFor(model => Model.NewPassword, new { @id = "newPasswordInput", @class = "form-control" })

        @*check box to hide password*@
        <div class="row">
            <div class="col-md-1">
                <input type="checkbox" onclick="hideNewPassword()">
            </div>
            <div class="col-md-2">
                Show Password
            </div>
        </div>
        @Html.ValidationMessageFor(model => Model.NewPassword, "", new { @class = "text-danger" })
    </div>

    @*form group for confirm password*@
    @Html.LabelFor(model => Model.ConfirmNewPassword)
    <div class="form-group">
        @Html.PasswordFor(model => Model.ConfirmNewPassword, new { @id = "confirmPasswordInput", @class = "form-control" })

        @*check box to show password*@
        <div class="row">
            <div class="col-md-1">
                <input type="checkbox" onclick="hideConfirmPassword()">
            </div>
            <div class="col-md-2">
                Show Password
            </div>
        </div>
        @Html.ValidationMessageFor(model => Model.ConfirmNewPassword, "", new { @class = "text-danger" })
    </div>
</div>
    @*submit button*@
    <div class="form-group">
        <input class="btn btn-warning" type="submit" value="Update" />
    </div>
}