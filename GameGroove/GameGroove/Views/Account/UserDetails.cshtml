@using GameGroove.Models
@model ReviewVM

@{
    ViewBag.Title = "User Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row">
    <h2>@Model.User.Username's Profile</h2>
</div>
<div class="row">
    @*Check to see if the user is logged in*@
    @if (Session["RoleID"] != null)
    {
        @*check permissions*@
        if ((int)Session["RoleID"] == 6 || Session["UserID"].Equals(Model.User.UserID))
        {
            <div class="col-md-2">
                <br />
                @*Show edit button if the user has permission*@
                @Html.ActionLink("Edit Profile", "UpdateUser", "Account", new { id = Model.User.UserID }, new { @class = "btn btn-default" })
            </div>
            <div class="col-md-2">
                <br />
                @*Show the change password button if the user has permission*@
                @Html.ActionLink("Change Password", "ChangePassword", "Account", new { id = Model.User.UserID }, new { @class = "btn btn-default" })
            </div>
        }
        @*Check for admin*@
        if ((int)Session["RoleID"] == 6)
        {
            <div class="col-md-2">
                <br />
                @*Show delete button if the user is an admin*@
                @Html.ActionLink("Delete User", "DeleteUser", "Account", new { id = Model.User.UserID }, 
                new { @class = "btn btn-default", onclick = "return confirm('Are you sure you want to delete this user?');" })
            </div>
        }
    }
</div>
<br />
@*Display information about the user*@
<div class="row jumbotron-properties">
    @Html.LabelFor(model => Model.User.Username) : @Model.User.Username <br /> <br />
    <strong>First Name</strong> : @Model.User.FirstName <br /> <br />
    <strong>Last Name</strong> : @Model.User.LastName <br /> <br />
    @Html.LabelFor(model => Model.User.Email) : @Model.User.Email 
    @if (Session["RoleID"] != null && (int)Session["RoleID"] == 4 || Session["RoleID"] != null && (int)Session["RoleID"] == 6)
    {
        <br /> <br />
        <strong>Role :</strong> @Model.User.RoleName
    }
</div>

@*check to see if the user has submitted any reviews*@
@if (Model.UserFavCategory.Category != null)
{
    @*If they have reviews, display the most frequent category*@
    <div class="row jumbotron h4 ">
        <strong>Most Recommended Category</strong> : @Model.UserFavCategory.Category
    </div>
}

@*check for and/or display reviews submitted by the user*@
<h3>Reviews Submitted by @Model.User.Username</h3>
@if (Model.ReviewsList.Any())
{
    <table class="table table-bordered table-responsive table-striped">
        <thead>
            <tr>
                <th>
                    Username
                </th>
                <th>
                    Date Posted
                </th>
                <th>
                    Category
                </th>
                <th>
                    Game
                </th>
                <th>
                    Review Page
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (ReviewPO review in Model.ReviewsList)
            {
                <tr>
                    <td>
                        @review.Username
                    </td>
                    <td>
                        @review.DatePosted
                    </td>
                    <td>
                        @review.Category
                    </td>
                    <td>
                        @review.GameTitle
                    </td>
                    <td>
                        @Html.ActionLink("Details", "ReviewDetails", "Review", new { id = review.ReviewID }, null)
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>

        </tfoot>
    </table>
}
@*If there are no reviews, show this message*@
else
{
    <strong>There are no reviews submitted by this user!</strong>
}




